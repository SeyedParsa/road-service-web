# Generated by Django 3.2.3 on 2021-08-22 17:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('role_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.role')),
            ],
            bases=('accounts.role',),
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('long', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=280)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('RP', 'Reported'), ('RJ', 'Rejected'), ('AC', 'Accepted'), ('FL', 'Failed'), ('AS', 'Assigned'), ('DO', 'Done'), ('SC', 'Scored')], default='RP', max_length=2)),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.citizen')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MachineryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('issue', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.issue')),
            ],
        ),
        migrations.CreateModel(
            name='MissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('role_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.role')),
            ],
            bases=('accounts.role',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CR', 'Country'), ('PR', 'Province'), ('CY', 'County')], max_length=2)),
                ('name', models.CharField(max_length=20)),
                ('super_region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_regions', to='core.region')),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.region')),
            ],
            bases=('core.region',),
        ),
        migrations.CreateModel(
            name='CountryModerator',
            fields=[
                ('moderator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.moderator')),
            ],
            bases=('core.moderator',),
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.region')),
            ],
            bases=('core.region',),
        ),
        migrations.CreateModel(
            name='CountyModerator',
            fields=[
                ('moderator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.moderator')),
            ],
            bases=('core.moderator',),
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.region')),
            ],
            bases=('core.region',),
        ),
        migrations.CreateModel(
            name='ProvinceModerator',
            fields=[
                ('moderator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.moderator')),
            ],
            bases=('core.moderator',),
        ),
        migrations.CreateModel(
            name='SpecialityRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.issue')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.speciality')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('active_mission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.mission')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.speciality')),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.county')),
            ],
        ),
        migrations.CreateModel(
            name='Serviceman',
            fields=[
                ('role_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.role')),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('long', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='core.serviceteam')),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.role', models.Model),
        ),
        migrations.AddField(
            model_name='moderator',
            name='region',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.region'),
        ),
        migrations.AddField(
            model_name='mission',
            name='service_teams',
            field=models.ManyToManyField(to='core.ServiceTeam'),
        ),
        migrations.AddField(
            model_name='mission',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.missiontype'),
        ),
        migrations.CreateModel(
            name='MachineryRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.issue')),
                ('machinery_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.machinerytype')),
            ],
        ),
        migrations.CreateModel(
            name='Machinery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_count', models.PositiveIntegerField()),
                ('available_count', models.PositiveIntegerField()),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.machinerytype')),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.county')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.county'),
        ),
        migrations.CreateModel(
            name='CountyExpert',
            fields=[
                ('role_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.role')),
                ('county', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.county')),
            ],
            bases=('accounts.role',),
        ),
    ]
